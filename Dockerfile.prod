# Any2Markdown MCP Server - 生产环境Dockerfile
# 多阶段构建，减少最终镜像大小

# 第一阶段：构建阶段
FROM python:3.11-slim AS builder

# 配置pip使用华为云源
RUN pip config set global.index-url https://repo.huaweicloud.com/repository/pypi/simple && \
    pip config set global.timeout 120 && \
    pip config set global.trusted-host repo.huaweicloud.com && \
    pip config set install.trusted-host repo.huaweicloud.com

# 复制依赖文件
COPY requirements-prod.txt ./

# 创建虚拟环境并安装依赖
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements-prod.txt && \
    pip install --no-cache-dir gunicorn

# 第二阶段：运行阶段
FROM python:3.11-slim

# 安装系统依赖（仅安装必要的curl用于健康检查）
RUN apt-get update && \
    apt-get install -y --no-install-recommends curl && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# 从构建阶段复制虚拟环境
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# 设置工作目录
WORKDIR /app

# 复制项目文件
COPY src/ ./src/
COPY run_server.py ./
COPY env.example ./
COPY docker-entrypoint.sh ./

# 设置脚本执行权限
RUN chmod +x docker-entrypoint.sh

# 创建必要的目录
RUN mkdir -p logs temp_images uploads

# 创建非root用户（安全最佳实践）
RUN groupadd -r appuser && useradd -r -g appuser appuser
RUN chown -R appuser:appuser /app
USER appuser

# 设置环境变量
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV HOST=0.0.0.0
ENV PORT=3000
ENV ENVIRONMENT=production
ENV LOG_LEVEL=info
ENV MAX_CONCURRENT_JOBS=3
ENV WORKERS=4
ENV WORKER_CLASS=uvicorn.workers.UvicornWorker
ENV MAX_REQUESTS=1000
ENV MAX_REQUESTS_JITTER=100
ENV KEEPALIVE=5

# 暴露端口
EXPOSE 3000

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/api/v1/status || exit 1

# 使用优化的入口脚本
ENTRYPOINT ["./docker-entrypoint.sh"] 